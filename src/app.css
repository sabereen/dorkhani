@import 'vazirmatn/misc/UI-Farsi-Digits/Vazirmatn-UI-FD-font-face.css';

html {
	overflow-y: scroll;
}

body {
	font-family: 'Vazirmatn UI FD', tahoma;
	margin: auto;
	max-width: 600px;
}

.hatched {
	background-image: repeating-linear-gradient(
		-45deg,
		var(--color-base-100),
		var(--color-base-100) 13px,
		var(--color-base-200) 13px,
		var(--color-base-200) 14px
	);
	background-size: 40px 40px;
}

.fieldset-label {
	color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
	align-items: center;
	display: flex;
	gap: 0.375rem;
}

.fieldset-legend {
	color: var(--color-base-content);
	justify-content: space-between;
	align-items: center;
	margin-bottom: -0.25rem;
	font-weight: 600;
	display: flex;
	gap: 0.5rem;
	padding-block: 0.5rem;
}

.input,
.textarea,
.select {
	width: 100%;
	display: block;
}

.fieldset {
	grid-template-columns: 1fr;
	grid-auto-rows: max-content;
	font-size: 0.75rem;
	display: grid;
	gap: 0.375rem;
	padding-block: 0.25rem;
}

.list {
	flex-direction: column;
	font-size: 0.875rem;
	display: flex;
}
:is(.list > :not(:last-child).list-row, .list > :not(:last-child) .list-row)::after {
	content: '';
	border-bottom-width: 0.8px;
	border-bottom-style: solid;
	position: absolute;
	bottom: 0px;
	inset-inline: var(--radius-box, 1rem);
	border-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
	border-color: #00000014;
}
.list :where(.list-row) {
	--list-grid-cols: minmax(0, auto) 1fr;
	word-break: break-word;
	grid-auto-flow: column;
	grid-template-columns: var(--list-grid-cols);
	display: grid;
	position: relative;
	border-radius: var(--radius-box, 1rem);
	gap: 1rem;
	padding: 1rem;
}

.btn-outline:not(
		.btn-active,
		:hover,
		:active:focus,
		:focus-visible,
		:disabled,
		[disabled],
		.btn-disabled
	) {
	--btn-shadow: '';
	--btn-bg: #0000;
	--btn-fg: var(--btn-color);
	--btn-border: var(--btn-color);
	--btn-noise: none;
}

.checkbox {
	vertical-align: middle;
}

.steps-horizontal .step:before {
	margin-left: 0;
	margin-right: -100%;
}

/* .tabs {
	--tabs-height: auto;
	--tabs-direction: row;
	height: var(--tabs-height);
	flex-wrap: wrap;
	flex-direction: var(--tabs-direction);
	display: flex;
}
.tabs-box {
	background-color: var(--color-base-200);
	box-shadow:
		0 -0.5px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset,
		0 0.5px oklch(0% 0 0 / calc(var(--depth) * 0.05)) inset;
	border-radius: calc(
		var(--radius-field) +
			min(0.25rem, calc(var(--radius-field) + var(--radius-field) + var(--radius-field)))
	);
	padding: 0.25rem;
}

.tab {
	cursor: pointer;
	appearance: none;
	text-align: center;
	user-select: none;
	--tab-p: 1rem;
	--tab-bg: var(--color-base-100);
	--tab-border-color: var(--color-base-300);
	--tab-radius-ss: 0;
	--tab-radius-se: 0;
	--tab-radius-es: 0;
	--tab-radius-ee: 0;
	--tab-order: 0;
	--tab-radius-min: calc(0.75rem - var(--border));
	flex-wrap: wrap;
	order: var(--tab-order);
	height: calc(var(--size-field, 0.25rem) * 10);
	justify-content: center;
	align-items: center;
	padding-inline-start: var(--tab-p);
	padding-inline-end: var(--tab-p);
	font-size: 0.875rem;
	display: inline-flex;
	position: relative;
	border-color: rgba(0, 0, 0, 0);
}
.tabs-box .tab {
	border-radius: var(--radius-field);
	border-style: none;
}
.tab:is(input[type='radio']) {
	min-width: fit-content;
}
.tab:not(:checked, label:has(:checked), :hover, .tab-active, [aria-selected='true']) {
	color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
}

.tab-content {
	order: var(--tabcontent-order);
	--tabcontent-radius-ss: 0;
	--tabcontent-radius-se: 0;
	--tabcontent-radius-es: 0;
	--tabcontent-radius-ee: 0;
	--tabcontent-order: 1;
	width: 100%;
	border-start-start-radius: var(--tabcontent-radius-ss);
	border-start-end-radius: var(--tabcontent-radius-se);
	border-end-end-radius: var(--tabcontent-radius-ee);
	border-end-start-radius: var(--tabcontent-radius-es);
	display: none;
	margin: var(--tabcontent-margin);
	border-color: rgba(0, 0, 0, 0);
	border-width: var(--border);
}
:is(.tab:checked, .tab:is(label:has(:checked)), .tab:is(.tab-active, [aria-selected='true']))
	+ .tab-content {
	height: 100%;
	display: block;
}
.tab:is(input[type='radio'])::after {
	content: attr(aria-label);
} */
